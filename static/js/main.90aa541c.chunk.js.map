{"version":3,"sources":["serviceWorker.js","Components/MyFooter.jsx","Components/MyNav.jsx","Components/Welcome.jsx","Components/SingleBook.jsx","Components/BooksSection.jsx","Components/BookCategoryNav.jsx","Components/MainComponent.jsx","index.js"],"names":["Boolean","window","location","hostname","match","MyFooter","state","Navbar","bg","fixed","Brand","href","Toggle","Collapse","className","Text","React","Component","MyNav","expand","sticky","aria-controls","id","Nav","Link","Welcome","Jumbotron","SingleBook","Card","style","width","Header","as","this","props","book","price","Img","variant","src","img","Body","Title","title","Footer","asin","BooksSection","Row","HorrorBooks","map","Book","index","key","BookCategoryNav","justify","defaultActiveKey","name","category","Item","MainComponent","Container","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90aa541c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nclass MyFooter extends React.Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" fixed=\"bottom\">\r\n                <Navbar.Brand href=\"#home\">&copy;2019</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                        Signed in as: <a href=\"https://github.com/faizanbardai\">FayJu</a>\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyFooter;","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass MyNav extends React.Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\r\n                <Navbar.Brand href=\"#home\">Books app on React</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#\">About</Nav.Link>\r\n                        <Nav.Link href=\"#\">Browse</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyNav;\r\n","import React from 'react'\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass Welcome extends React.Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Jumbotron>\r\n                <h1>Books</h1>\r\n                <p>\r\n                    Fill your appetite today with a new book!\r\n                </p>\r\n            </Jumbotron>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nclass SingleBook extends React.Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Card className=\"m-2\" style={{ width: '15rem' }}>\r\n                <Card.Header as=\"h5\">Price: ${this.props.book.price}</Card.Header>\r\n                <Card.Img variant=\"top\" src={this.props.book.img} />\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.book.title}</Card.Title>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">ASIN: {this.props.book.asin}</Card.Footer>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleBook;","import React from 'react';\r\nimport SingleBook from './SingleBook';\r\nimport { Row } from 'react-bootstrap';\r\nimport HorrorBooks from \"../data/horror.json\"\r\n\r\n\r\nclass BooksSection extends React.Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Row className=\"justify-content-center\">\r\n                {HorrorBooks.map((Book, index) => <SingleBook book={Book} key={index} />)};\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksSection;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass BookCategoryNav extends React.Component {\r\n\r\n    state = {}\r\n    render() {\r\n        var booksCategory = [\r\n            { name: \"Horror\", id: \"1\" },\r\n            { name: \"History\", id: \"2\" },\r\n            { name: \"Fantasy\", id: \"3\" },\r\n            { name: \"Romance\", id: \"4\" },\r\n            { name: \"Sci-Fi\", id: \"5\" }\r\n        ]\r\n        return (\r\n            <Nav justify variant=\"pills\" defaultActiveKey=\"1\">\r\n                {booksCategory.map((category) =>\r\n                    <Nav.Item category={category} key={category.id}>\r\n                        <Nav.Link href={category.id}>{category.name}</Nav.Link>\r\n                    </Nav.Item>\r\n                )}              \r\n            </Nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookCategoryNav;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport MyFooter from './MyFooter';\r\nimport MyNav from './MyNav';\r\nimport Welcome from './Welcome';\r\nimport BooksSection from './BooksSection';\r\nimport BookCategoryNav from './BookCategoryNav';\r\n\r\n\r\nclass MainComponent extends React.Component {\r\n    \r\n    state = {}\r\n    render() {\r\n        \r\n        return (\r\n            \r\n            <Container>\r\n                <MyNav />\r\n                <Welcome />\r\n                <BookCategoryNav />\r\n                <BooksSection />\r\n                <MyFooter />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport MainComponent from \"./Components/MainComponent\"\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<MainComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}